{"version":3,"file":"js/chat.ab207893.js","mappings":"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","sources":["webpack://pokey/./node_modules/core-js/internals/regexp-flags.js","webpack://pokey/./node_modules/core-js/modules/es.regexp.flags.js","webpack://pokey/./node_modules/js-file-download/file-download.js","webpack://pokey/./src/views/chat/ChatView.vue","webpack://pokey/./node_modules/engine.io-parser/build/esm/commons.js","webpack://pokey/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://pokey/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://pokey/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://pokey/./node_modules/engine.io-parser/build/esm/index.js","webpack://pokey/./node_modules/@socket.io/component-emitter/index.mjs","webpack://pokey/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://pokey/./node_modules/engine.io-client/build/esm/util.js","webpack://pokey/./node_modules/engine.io-client/build/esm/transport.js","webpack://pokey/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://pokey/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://pokey/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://pokey/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://pokey/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://pokey/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://pokey/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://pokey/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://pokey/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://pokey/./node_modules/engine.io-client/build/esm/socket.js","webpack://pokey/./node_modules/engine.io-client/build/esm/index.js","webpack://pokey/./node_modules/socket.io-client/build/esm/url.js","webpack://pokey/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://pokey/./node_modules/socket.io-parser/build/esm/binary.js","webpack://pokey/./node_modules/socket.io-parser/build/esm/index.js","webpack://pokey/./node_modules/socket.io-client/build/esm/on.js","webpack://pokey/./node_modules/socket.io-client/build/esm/socket.js","webpack://pokey/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://pokey/./node_modules/socket.io-client/build/esm/manager.js","webpack://pokey/./node_modules/socket.io-client/build/esm/index.js","webpack://pokey/./src/socket.js","webpack://pokey/./src/components/PeerVideo.vue","webpack://pokey/./src/components/PeerVideo.vue?b341","webpack://pokey/./src/util/txtToProceedings.js","webpack://pokey/./src/views/chat/ChatView.vue?5fff"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","<template>\n  <div>\n    <div class=\"container clearfix\">\n      <div class=\"people-list\" id=\"people-list\">\n        <ul class=\"list\">\n          <div v-for=\"(item, index) in reversedTransList\" :key=\"index\">\n            <li class=\"clearfix\">\n              <div class=\"about\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"status\">\n                  <i class=\"fa online\"></i> {{ item.translation }}\n                </div>\n              </div>\n            </li>\n            <br />\n          </div>\n        </ul>\n\n        <div class=\"wrap\">\n          <button class=\"smbtn\" @click=\"download\">Download</button>\n        </div>\n      </div>\n\n      <div class=\"video\">\n        <div class=\"video-history\">\n          <!-- 상대 화면 추가 -->\n          <div>\n            <video\n              id=\"big-peer-face\"\n              autoplay\n              playsinline\n              width=\"665\"\n              height=\"583\"\n            ></video>\n          </div>\n        </div>\n\n        <div class=\"video-message clearfix\">\n          <!-- 내 화면 추가-->\n          <div id=\"myStream\">\n            <video id=\"myFace\" autoplay playsinline height=\"142\"></video>\n          </div>\n\n          <peer-video\n            :id=\"'peerFace-' + index\"\n            v-for=\"(item, index) in peerConnections\"\n            :key=\"index\"\n            :stream=\"item.stream\"\n            :click=\"videoClick\"\n          ></peer-video>\n          <div v-for=\"(item, index) in dummy\" :key=\"index\">\n            <div></div>\n          </div>\n          <i class=\"fa fa-file-o\"></i> &nbsp;&nbsp;&nbsp;\n          <i class=\"fa fa-file-image-o\"></i>\n        </div>\n      </div>\n\n      <div class=\"chat\" id=\"talk\">\n        <div class=\"chat-header clearfix\">\n          <div class=\"chat-about\">\n            <div class=\"chat-with\">{{ roomName }}</div>\n            <div class=\"chat-num-messages\">message :&nbsp;{{ textCount }}</div>\n          </div>\n          <img class=\"logo-img\" src=\"@/views/main/img/pokey_logo.png\" />\n        </div>\n        <!-- end chat-header -->\n\n        <div class=\"chat-history\" id=\"greetings\">\n          <ul id=\"message-ul\">\n            <!--                        텍스트 채팅 내용-->\n          </ul>\n        </div>\n        <!-- end chat-history -->\n\n        <div class=\"chat-message clearfix\">\n          <form id=\"input-message\">\n            <textarea\n              name=\"message-to-send\"\n              id=\"text-message\"\n              v-model=\"text\"\n              class=\"form-control\"\n              placeholder=\"Type your message\"\n              rows=\"3\"\n              @keypress.enter.exact.prevent=\"msgSubmit\"\n            ></textarea>\n          </form>\n\n          <i class=\"fa fa-file-o\"></i> &nbsp;&nbsp;&nbsp;\n          <i class=\"fa fa-file-image-o\"></i>\n\n          <button class=\"btn btn-default\" type=\"submit\" id=\"send\">Send</button>\n        </div>\n        <!-- end chat-message -->\n      </div>\n      <!-- end chat -->\n    </div>\n    <!-- end container -->\n    <div id=\"footer\">\n      <div class=\"footer\">\n        <nav role=\"navigation\">\n          <div id=\"menuToggle\">\n            <input class=\"menuinput\" type=\"checkbox\" />\n\n            <span class=\"menuspan\"></span>\n            <span class=\"menuspan\"></span>\n            <span class=\"menuspan\"></span>\n            <div id=\"menu\">\n              <div class=\"menutop\">\n                <!-- 등록한 이메일 리스트 -->\n                <div\n                  id=\"peremail\"\n                  v-for=\"(email, index) in authUserEmails\"\n                  :key=\"index\"\n                >\n                  <div class=\"inputs\">\n                    <div class=\"group\">\n                      <label class=\"loginlabel\">{{ email }}</label>\n                    </div>\n                  </div>\n\n                  <div class=\"wrap\">\n                    <button class=\"smbtn\" @click=\"sendDeleteAuthUser(email)\">\n                      ✖\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"inputs\">\n                <div class=\"group\">\n                  <input\n                    type=\"email\"\n                    v-model=\"inputEmail\"\n                    required\n                    class=\"logininput\"\n                  />\n                  <span class=\"highlight\"></span>\n                  <span class=\"bar\"></span>\n                  <label class=\"loginlabel\">Email</label>\n                </div>\n              </div>\n\n              <div class=\"wrap\">\n                <button class=\"smbtn\" @click=\"sendAuthUser\">+</button>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n\n      <div class=\"ft-toggle\">\n        <div class=\"toggle\">\n          <div class=\"togglebtn\">\n            <p><b>Mic On</b></p>\n          </div>\n          <div class=\"togglebtn\">\n            <input\n              type=\"checkbox\"\n              id=\"togglech\"\n              hidden\n              @click=\"handleMuteClick\"\n            />\n            <label for=\"togglech\" class=\"toggleSwitch\">\n              <span class=\"toggleButton\"></span>\n            </label>\n          </div>\n\n          <div class=\"togglebtn\">\n            <p><b>Video On</b></p>\n          </div>\n          <div class=\"togglebtn\">\n            <input\n              type=\"checkbox\"\n              id=\"togglech2\"\n              hidden\n              @click=\"handleCameraClick\"\n            />\n            <label for=\"togglech2\" class=\"toggleSwitch blue\">\n              <span class=\"toggleButton\"></span>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div class=\"info\">\n        <p>\n          <b>{{ this.$store.state.name }}</b>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { socket } from \"@/socket\";\nimport PeerVideo from \"@/components/PeerVideo.vue\";\nimport txtDownload from \"@/util/txtToProceedings.js\";\n\nexport default {\n  name: \"ChatView\",\n  components: {\n    PeerVideo,\n  },\n  data() {\n    return {\n      authUserEmails: [],\n      inputEmail: \"\",\n      roomName: \"\",\n      myStream: null,\n      peerStream: null,\n      muted: false,\n      cameraOff: false,\n      /**\n       * socketId: info.socketId,\n       * name: info.name,\n       * offer: offer.createOffer(),\n       */\n      peerConnections: [],\n      camerasSelect: null,\n      camerasList: [],\n      /**\n       * 상태 변경을 위해 더미 변수 추가\n       */\n      dummy: [0],\n      recognition: null,\n      text: \"\",\n      textCount: 0,\n      currentTime: \"\",\n      transList: [],\n    };\n  },\n  created() {\n    setInterval(() => {\n      this.currentTime = new Date().toLocaleTimeString();\n    }, 1000);\n  },\n  beforeUnmount() {\n    this.disconnect();\n  },\n  async mounted() {\n    this.getRoomName();\n    await this.getMedia();\n    this.connect();\n    socket.emit(\n      \"join_room\",\n      this.roomName,\n      this.$store.state.accessToken,\n      () => {\n        this.setStt();\n      }\n    );\n\n    // 방에 새로운 사람이 입장할 시 발생하는 이벤트\n    // 새로 입장한 사람에게 offer 전송\n    // info 예시 데이터 { socketId: socket.id, name: socket.user.name }\n    socket.on(\"welcome\", async (info) => {\n      console.log(info.name + \"님이 접속하셨습니다.\");\n      var peerConnection;\n      var obj = {\n        peerConnection: peerConnection,\n        socketId: info.socketId,\n        name: info.name,\n      };\n\n      await this.makeConnection(\n        obj,\n        (data) => {\n          console.log(\"welcome/sent candidate\" + data.candidate);\n          socket.emit(\"ice\", info.socketId, data.candidate);\n        },\n        (data) => {\n          obj.stream = data.stream;\n          this.dummy[0]++;\n        },\n        (event) => {\n          const state = event.target;\n          if (\n            state.iceConnectionState === \"disconnected\" ||\n            state.iceConnectionState === \"closed\"\n          ) {\n            // 상대 피어의 연결이 닫힌 경우 실행\n            this.peerConnections = this.peerConnections.filter((item) => {\n              return item.socketId !== info.socketId;\n            });\n          }\n        }\n      );\n\n      var offer = await obj.peerConnection.createOffer();\n      obj.peerConnection.setLocalDescription(offer);\n\n      this.peerConnections.push(obj);\n      console.log(\"sent the offer\");\n      // 내가 가진 offer을 전송\n      socket.emit(\"offer\", info.socketId, offer);\n      return;\n    });\n\n    // 기존 입장한 유저가 보낸 offer를 받고 답장을 보냄.\n    // 서버에서 전송된 데이터 ({ socketId: socket.id, name: socket.user.name }, offer)\n    socket.on(\"offer\", async (info, inOffer) => {\n      var peerConnection;\n      var obj = {\n        socketId: info.socketId,\n        name: info.name,\n        peerConnection: peerConnection,\n      };\n\n      await this.makeConnection(\n        obj,\n        (data) => {\n          console.log(\"offer/sent candidate \" + data.candidate);\n          socket.emit(\"ice\", info.socketId, data.candidate);\n        },\n        (data) => {\n          obj.stream = data.stream;\n          this.dummy[0]++;\n        }\n      );\n\n      await obj.peerConnection.setRemoteDescription(inOffer);\n      const answer = await obj.peerConnection.createAnswer();\n      await obj.peerConnection.setLocalDescription(answer);\n\n      this.peerConnections.push(obj);\n\n      console.log(\"sent the answer\");\n      socket.emit(\"answer\", info.socketId, answer);\n    });\n\n    // ({ socketId: socket.id, name: socket.user.name }, answer)\n    socket.on(\"answer\", async (info, answer) => {\n      var obj = this.peerConnections.find((item) => {\n        return item.socketId == info.socketId;\n      });\n      console.log(\"received the answer\");\n      // await obj.peerConnection.setRemoteDescription(answer);\n      if (obj.peerConnection.signalingState != \"stable\") {\n        await obj.peerConnection.setRemoteDescription(answer);\n      }\n    });\n\n    // ({ socketId: socket.id, name: socket.user.name }, ice)\n    socket.on(\"ice\", async (info, ice) => {\n      console.log(\"received candidate\");\n      var obj = this.peerConnections.find((item) => {\n        return item.socketId == info.socketId;\n      });\n\n      await obj.peerConnection.addIceCandidate(ice);\n    });\n\n    // { socketId: socket.id, name: socket.user.name }, translation\n    socket.on(\"trans_return\", (info, date, translation) => {\n      // var language = this.$store.state.language;\n      // var country = this.$store.state.country;\n\n      this.transList.push({\n        date: date,\n        name: info.name,\n        translation: translation,\n      });\n      // console.log(`[${getDate}] ${info.name}: ${translation}`);\n    });\n\n    socket.on(\"not_room_auth\", () => {\n      alert(\"방에 접속할 수 없습니다.\");\n      this.$router.push(\"/\");\n    });\n\n    socket.on(\"not_auth\", () => {\n      alert(\"로그인이 필요합니다.\");\n      this.$router.push(\"/\");\n    });\n\n    socket.on(\"disconnect\", () => {\n      // alert(\"서버와 연결이 끊켰습니다.\");\n      console.log(\"disconnect\");\n    });\n\n    socket.on(\"user_disconnect\", (info) => {\n      console.log(info.name + \"님이 방을 나가셨습니다.\");\n      this.peerConnections = this.peerConnections.filter((item) => {\n        return item.socketId != info.socketId;\n      });\n    });\n\n    // text chat\n    socket.on(\"new_message\", async (info, msg) => {\n      const userName = info.name;\n      this.addMessageYours(userName, msg, this.textCount);\n      const focus = document.getElementById(\"focus\" + this.textCount);\n      focus.scrollIntoView({ behavior: \"smooth\" });\n      this.textCount++;\n    });\n  },\n  methods: {\n    getRoomName() {\n      const urlParam = new URLSearchParams(window.location.search);\n      this.roomName = urlParam.get(\"room\");\n    },\n    connect() {\n      socket.connect();\n      /** 라우터 이동 시 데이터 새로고침을 중지 */\n    },\n    // 내가 나갈 때 실행\n    disconnect() {\n      this.peerConnections.forEach((item) => {\n        item.peerConnection.close();\n      });\n      this.peerConnections = [];\n\n      if (this.myStream) {\n        this.myStream.getAudioTracks().forEach((track) => track.stop());\n        this.myStream.getVideoTracks().forEach((track) => track.stop());\n      }\n      this.myStream = null;\n      socket.disconnect();\n      console.log(\"disconnect\");\n    },\n    async getCameras() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const cameras = devices.filter(\n          (device) => device.kind === \"videoinput\"\n        );\n        const currentCamera = this.myStream.getVideoTracks()[0];\n\n        cameras.forEach((camera) => {\n          this.camerasList.push({ name: camera.label, value: camera.deviceId });\n          if (currentCamera.label == camera.label) {\n            this.camerasSelect = camera.label;\n          }\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    async getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: { facingMode: \"user\" },\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: { deviceId: { exact: deviceId } },\n      };\n      try {\n        this.myStream = await navigator.mediaDevices\n          .getUserMedia(deviceId ? cameraConstraints : initialConstrains)\n          .catch((err) => {\n            console.log(err);\n          });\n        const myFace = document.querySelector(\"#myFace\");\n        myFace.srcObject = this.myStream;\n        if (!deviceId) {\n          // 카메라 목록이 계속 추가되지 않도록 최초만 작동하도록 수정\n          await this.getCameras();\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    handleMuteClick() {\n      this.myStream\n        .getAudioTracks()\n        .forEach((track) => (track.enabled = !track.enabled));\n      if (!this.muted) {\n        this.muted = true;\n        this.recognition.stop();\n      } else {\n        this.muted = false;\n        this.recognition.start();\n      }\n    },\n    handleCameraClick() {\n      this.myStream\n        .getVideoTracks()\n        .forEach((track) => (track.enabled = !track.enabled));\n      if (this.cameraOff) {\n        this.cameraOff = false;\n      } else {\n        this.cameraOff = true;\n      }\n    },\n    async handleCameraChange(event) {\n      await this.getMedia(event.target.value);\n\n      this.peerConnections.forEach((item) => {\n        const videoTrack = this.myStream.getVideoTracks()[0];\n        const videoSender = item.peerConnection\n          .getSenders()\n          .find((sender) => sender.track.kind === \"video\");\n        videoSender.replaceTrack(videoTrack);\n      });\n    },\n    // RTC Code\n    makeConnection(\n      obj,\n      handleIce,\n      handleAddStream,\n      handleConnectionStateChange\n    ) {\n      console.log(\"webRTC start\");\n      obj.peerConnection = new RTCPeerConnection({\n        iceServers: [\n          {\n            urls: [\n              \"stun:stun.l.google.com:19302\",\n              \"stun:stun1.l.google.com:19302\",\n              \"stun:stun2.l.google.com:19302\",\n              \"stun:stun3.l.google.com:19302\",\n              \"stun:stun4.l.google.com:19302\",\n            ],\n          },\n        ],\n      });\n      obj.peerConnection.addEventListener(\"icecandidate\", handleIce);\n      obj.peerConnection.addEventListener(\"addstream\", handleAddStream);\n      obj.peerConnection.addEventListener(\n        \"iceconnectionstatechange\",\n        handleConnectionStateChange\n      ); // Add event listener for ice connection state change\n\n      this.myStream.getTracks().forEach((track) => {\n        obj.peerConnection.addTrack(track, this.myStream);\n      });\n    },\n\n    /**\n     * 입장 가능한 유저의 정보를 서버에 전송한다.\n     */\n    sendAuthUser(event) {\n      event.preventDefault();\n\n      this.authUserEmails.push(this.inputEmail);\n\n      this.socketAuthEmit();\n    },\n\n    sendDeleteAuthUser(email) {\n      this.authUserEmails = this.authUserEmails.filter(\n        (value) => value !== email\n      );\n      this.socketAuthEmit();\n    },\n\n    socketAuthEmit() {\n      socket.emit(\n        \"setAuthUser\",\n        this.authUserEmails,\n        this.roomName,\n        (result) => {\n          if (result === true) {\n            alert(\"처리되었습니다.\");\n            this.inputEmail = \"\";\n          } else {\n            alert(\"등록에 실패하였습니다.\");\n          }\n        }\n      );\n    },\n\n    /**\n     * 음성 인식을 설정\n     */\n    setStt() {\n      // eslint-disable-next-line no-undef\n      this.recognition = new webkitSpeechRecognition();\n      var language = this.$store.state.language;\n      var country = this.$store.state.country;\n\n      console.log(`적용 언어: ${language}-${country}`);\n      this.recognition.lang = `${language}-${country}`;\n\n      this.recognition.onresult = (event) => {\n        const speechResult = event.results[0][0].transcript;\n        console.log(`인식 결과 ${speechResult}`);\n\n        // 음소거 중이면 전송하지 않도록\n        if (!this.muted) {\n          const name = this.$store.state.name;\n\n          const date = new Date();\n\n          this.transList.push({\n            date: date,\n            name: name,\n            translation: speechResult,\n          });\n          socket.emit(\"trans\", this.roomName, speechResult);\n        }\n      };\n\n      // this.recognition.onerror = (event) => {\n      //   console.log(event.error);\n      // };\n\n      this.recognition.onend = () => {\n        // console.log(\"다음 말을 인식합니다.\");\n        if (this.muted) {\n          this.recognition.stop();\n        } else {\n          this.recognition.start();\n        }\n      };\n\n      this.recognition.start();\n    },\n    msgSubmit(event) {\n      event.preventDefault();\n      const inputMsg = document.getElementById(\"input-message\");\n      const input = inputMsg.querySelector(\"textarea\");\n      const text = input.value;\n\n      if (text == \"\") return;\n\n      if (event) {\n        socket.emit(\"new_message\", text, this.roomName, () => {\n          this.addMessageMine(`나`, `${text}`, this.textCount);\n          this.text = \"\"; // 초기화\n          const focus = document.getElementById(\"focus\" + this.textCount);\n          focus.scrollIntoView({ behavior: \"smooth\" });\n          this.textCount++;\n\n          this.$refs.focus.scrollIntoView({ behavior: \"smooth\" });\n        });\n      }\n    },\n    addMessageMine(user, message, count) {\n      const msg = document.getElementById(\"message-ul\");\n\n      msg.innerHTML =\n        msg.innerHTML +\n        `<li id=\"focus${count}\"` +\n        ' class=\"cleardot\">\\n' +\n        '                              <div class=\"message-data align-right\">\\n' +\n        '                                  <span class=\"message-data-time\" >' +\n        this.currentTime +\n        \"</span> &nbsp; &nbsp;\\n\" +\n        '                                  <span class=\"message-data-name\" >' +\n        user +\n        '</span> <i class=\"fa me\"></i>\\n' +\n        \"\\n\" +\n        \"                              </div>\\n\" +\n        '                              <div class=\"message other-message float-right\">\\n' +\n        '<p class=\"word-break\">' +\n        message +\n        \"</p>\\n\" +\n        \"                              </div>\\n\" +\n        \"                          </li>\";\n    },\n    addMessageYours(user, message, count) {\n      const msg = document.getElementById(\"message-ul\");\n\n      msg.innerHTML =\n        msg.innerHTML +\n        `<li id=\"focus${count}\"` +\n        ' class=\"cleardot\">\\n' +\n        '                              <div class=\"message-data\">\\n' +\n        '                                  <span class=\"message-data-name\"><i class=\"fa online\"></i>' +\n        user +\n        \"</span>\\n\" +\n        '                                  <span class=\"message-data-time\">' +\n        this.currentTime +\n        \"</span>\\n\" +\n        \"                              </div>\\n\" +\n        '                              <div class=\"message my-message\">\\n' +\n        '<p class=\"word-break\">' +\n        message +\n        \"</p>\\n\" +\n        \"                              </div>\\n\" +\n        \"                          </li>\";\n    },\n    videoClick(item) {\n      const bigPeerFace = document.querySelector(\"#big-peer-face\");\n      bigPeerFace.srcObject = item;\n    },\n    download() {\n      txtDownload(this.roomName, this.transList);\n    },\n  },\n  computed: {\n    reversedTransList() {\n      return this.transList.slice().reverse();\n    },\n  },\n};\n</script>\n<style scoped>\n@import url(\"./chat.css\");\n</style>\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { reactive } from \"vue\";\nimport { io } from \"socket.io-client\";\n\nexport const state = reactive({\n  connected: false,\n  fooEvents: [],\n  barEvents: [],\n});\n\nconst URL =\n  process.env.NODE_ENV === \"production\"\n    ? undefined\n    : process.env.VUE_APP_SERVER_URL;\n\nexport const socket = io(URL);\n\n// socket.on(\"connect\", () => {\n//   console.log(URL);\n//   state.connected = true;\n//   console.log(\"ok\");\n// });\n\n// socket.on(\"disconnect\", () => {\n//   state.connected = false;\n//   console.log(\"disconnect\");\n// });\n\n// socket.on(\"foo\", (...args) => {\n//   state.fooEvents.push(args);\n// });\n\n// socket.on(\"bar\", (...args) => {\n//   state.barEvents.push(args);\n// });\n","<template>\n  <video\n    ref=\"videoTag\"\n    :id=\"id\"\n    autoplay\n    playsinline\n    height=\"142\"\n    @click=\"setChang\"\n    style=\"margin-left: 10px\"\n  ></video>\n</template>\n\n<script>\nexport default {\n  name: \"PeerVideo\",\n  props: [\"id\", \"stream\", \"click\"],\n  watch: {\n    stream(newStream) {\n      if (newStream) {\n        this.$refs.videoTag.srcObject = newStream;\n      }\n    },\n  },\n  mounted() {\n    if (this.stream) {\n      this.$refs.videoTag.srcObject = this.stream;\n    }\n  },\n  methods: {\n    setChang() {\n      this.click(this.stream);\n    },\n  },\n};\n</script>\n","import { render } from \"./PeerVideo.vue?vue&type=template&id=8c4f98b2\"\nimport script from \"./PeerVideo.vue?vue&type=script&lang=js\"\nexport * from \"./PeerVideo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","const txtDownload = (roomName, txt) => {\n  //   this.txt.push({\n  //     date: getDate,\n  //     name: info.name,\n  //     translation: translation,\n  //   });\n  var content = \"\";\n  console.log(txt);\n\n  const date = new Date();\n\n  const year = date.getFullYear();\n  const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n  const day = (\"0\" + date.getDate()).slice(-2);\n  const dateStr = year + \"-\" + month + \"-\" + day;\n\n  content += contentAdd(`${dateStr} ${roomName}`);\n  content += \"\\n\";\n\n  txt.forEach((item) => {\n    var itemDate = new Date(item.date);\n\n    const itemHours = (\"0\" + itemDate.getHours()).slice(-2);\n    const itemMinutes = (\"0\" + itemDate.getMinutes()).slice(-2);\n\n    content += contentAdd(\n      `[${itemHours}:${itemMinutes}] ${item.name}: ${item.translation}`\n    );\n  });\n\n  var fileDownload = require(\"js-file-download\");\n  fileDownload(content, `${dateStr}_${roomName}.txt`);\n};\n\nconst contentAdd = (txt) => {\n  return txt + \"\\n\";\n};\n\nexport default txtDownload;\n","import { render } from \"./ChatView.vue?vue&type=template&id=53e9caf9&scoped=true\"\nimport script from \"./ChatView.vue?vue&type=script&lang=js\"\nexport * from \"./ChatView.vue?vue&type=script&lang=js\"\n\nimport \"./ChatView.vue?vue&type=style&index=0&id=53e9caf9&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-53e9caf9\"]])\n\nexport default __exports__"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","data","filename","mime","bom","blobData","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","class","id","_createElementVNode","autoplay","playsinline","width","height","_hoisted_15","src","_imports_0","role","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","reversedTransList","item","index","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","name","_hoisted_7","_hoisted_8","translation","_hoisted_9","_hoisted_10","onClick","_cache","args","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","$data","peerConnections","_createBlock","_component_peer_video","stream","videoClick","dummy","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","roomName","_hoisted_23","textCount","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","text","$event","placeholder","rows","onKeypress","_withKeys","_withModifiers","msgSubmit","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","authUserEmails","email","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","sendDeleteAuthUser","_hoisted_45","_hoisted_46","_hoisted_47","inputEmail","required","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","sendAuthUser","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","hidden","handleMuteClick","_hoisted_56","_hoisted_57","_hoisted_58","handleCameraClick","_hoisted_59","_hoisted_60","$store","state","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","withNativeBlob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","slice","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","alphabet","map","prev","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","clearTimeout","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","reactive","fooEvents","barEvents","ref","$props","setChang","props","watch","newStream","$refs","videoTag","srcObject","mounted","methods","__exports__","txtDownload","txt","console","log","date","year","getFullYear","month","getMonth","day","getDate","dateStr","contentAdd","itemDate","itemHours","getHours","itemMinutes","getMinutes","fileDownload","require","components","PeerVideo","myStream","peerStream","muted","cameraOff","camerasSelect","camerasList","recognition","currentTime","transList","created","setInterval","toLocaleTimeString","beforeUnmount","getRoomName","getMedia","accessToken","setStt","peerConnection","info","socketId","makeConnection","candidate","target","iceConnectionState","filter","offer","createOffer","setLocalDescription","inOffer","setRemoteDescription","answer","createAnswer","find","signalingState","ice","addIceCandidate","alert","$router","userName","addMessageYours","focus","getElementById","scrollIntoView","behavior","urlParam","URLSearchParams","search","getAudioTracks","track","stop","getVideoTracks","devices","mediaDevices","enumerateDevices","cameras","device","kind","currentCamera","camera","label","deviceId","initialConstrains","audio","video","facingMode","cameraConstraints","exact","getUserMedia","catch","myFace","querySelector","getCameras","enabled","videoTrack","videoSender","getSenders","sender","replaceTrack","handleIce","handleAddStream","handleConnectionStateChange","RTCPeerConnection","iceServers","urls","getTracks","addTrack","preventDefault","socketAuthEmit","webkitSpeechRecognition","language","country","lang","onresult","speechResult","results","transcript","onend","inputMsg","input","addMessageMine","user","innerHTML","bigPeerFace","computed","reverse","render"],"sourceRoot":""}