{"version":3,"file":"js/about.472aa096.js","mappings":"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","sources":["webpack://frontend/./node_modules/core-js/internals/regexp-flags.js","webpack://frontend/./node_modules/core-js/modules/es.regexp.flags.js","webpack://frontend/./src/views/AboutView.vue","webpack://frontend/./src/views/AboutView.vue?d56f","webpack://frontend/./src/views/ChatView.vue","webpack://frontend/./node_modules/engine.io-parser/build/esm/commons.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/index.js","webpack://frontend/./node_modules/@socket.io/component-emitter/index.mjs","webpack://frontend/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/util.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transport.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://frontend/./node_modules/engine.io-client/build/esm/socket.js","webpack://frontend/./node_modules/engine.io-client/build/esm/index.js","webpack://frontend/./node_modules/socket.io-client/build/esm/url.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/binary.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/index.js","webpack://frontend/./node_modules/socket.io-client/build/esm/on.js","webpack://frontend/./node_modules/socket.io-client/build/esm/socket.js","webpack://frontend/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://frontend/./node_modules/socket.io-client/build/esm/manager.js","webpack://frontend/./node_modules/socket.io-client/build/esm/index.js","webpack://frontend/./src/socket.js","webpack://frontend/./src/components/PeerVideo.vue","webpack://frontend/./src/components/PeerVideo.vue?b341","webpack://frontend/./src/views/ChatView.vue?fcb5","webpack://frontend/./src/views/RoomView.vue","webpack://frontend/./src/views/RoomView.vue?c793"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n  </div>\n</template>\n","import { render } from \"./AboutView.vue?vue&type=template&id=48dedea6\"\nconst script = {}\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    허용할 유저 이메일 <br />\n    <input type=\"text\" v-model=\"authUserEmail\" />\n    <button @click=\"sendAuthUser\">저장</button>\n    <div id=\"call\">\n      <div id=\"myStream\">\n        <video\n          id=\"myFace\"\n          autoplay\n          playsinline\n          width=\"400\"\n          height=\"400\"\n        ></video>\n        <button id=\"mute\" @click=\"handleMuteClick\">\n          {{ muted ? \"Unmute\" : \"Mute\" }}\n        </button>\n        <button id=\"camera\" @click=\"handleCameraClick\">\n          {{ cameraOff ? \"Turn Camera On\" : \"Turn Camera Off\" }}\n        </button>\n        <select\n          id=\"cameras\"\n          v-model=\"camerasSelect\"\n          @change=\"handleCameraChange\"\n        >\n          <option\n            v-for=\"(item, index) in camerasList\"\n            :key=\"index\"\n            :value=\"item.value\"\n          >\n            {{ item.name }}\n          </option>\n        </select>\n      </div>\n      <!-- 상대 화면 추가 -->\n      <div>\n        <peer-video\n          :id=\"'peerFace-' + index\"\n          v-for=\"(item, index) in peerConnections\"\n          :key=\"index\"\n          :stream=\"item.stream\"\n        ></peer-video>\n        <div v-for=\"(item, index) in dummy\" :key=\"index\">\n          <div></div>\n        </div>\n      </div>\n    </div>\n    <button @click=\"disconnect\">disconnect</button>\n  </div>\n</template>\n\n<script>\nimport { socket } from \"@/socket\";\nimport PeerVideo from \"@/components/PeerVideo.vue\";\n\nexport default {\n  name: \"ChatView\",\n  components: {\n    PeerVideo,\n  },\n  data() {\n    return {\n      authUserEmail: \"\",\n      roomName: \"\",\n      myStream: null,\n      peerStream: null,\n      muted: false,\n      cameraOff: false,\n      /**\n       * socketId: info.socketId,\n       * name: info.name,\n       * offer: offer.createOffer(),\n       */\n      peerConnections: [],\n      camerasSelect: null,\n      camerasList: [],\n      /**\n       * 상태 변경을 위해 더미 변수 추가\n       */\n      dummy: [0],\n      recognition: null,\n    };\n  },\n  beforeUnmount() {\n    this.disconnect();\n  },\n  async mounted() {\n    this.getRoomName();\n    await this.getMedia();\n    this.connect();\n    socket.emit(\n      \"join_room\",\n      this.roomName,\n      this.$store.state.accessToken,\n      () => {\n        this.setStt();\n      }\n    );\n\n    // 방에 새로운 사람이 입장할 시 발생하는 이벤트\n    // 새로 입장한 사람에게 offer 전송\n    // info 예시 데이터 { socketId: socket.id, name: socket.user.name }\n    socket.on(\"welcome\", async (info) => {\n      console.log(info.name + \"님이 접속하셨습니다.\");\n      var peerConnection;\n      var obj = {\n        peerConnection: peerConnection,\n        socketId: info.socketId,\n        name: info.name,\n      };\n\n      await this.makeConnection(\n        obj,\n        (data) => {\n          console.log(\"welcome/sent candidate\" + data.candidate);\n          socket.emit(\"ice\", info.socketId, data.candidate);\n        },\n        (data) => {\n          obj.stream = data.stream;\n          this.dummy[0]++;\n        },\n        (event) => {\n          const state = event.target;\n          if (\n            state.iceConnectionState === \"disconnected\" ||\n            state.iceConnectionState === \"closed\"\n          ) {\n            // 상대 피어의 연결이 닫힌 경우 실행\n            this.peerConnections = this.peerConnections.filter((item) => {\n              return item.socketId !== info.socketId;\n            });\n          }\n        }\n      );\n\n      var offer = await obj.peerConnection.createOffer();\n      obj.peerConnection.setLocalDescription(offer);\n\n      this.peerConnections.push(obj);\n      console.log(\"sent the offer\");\n      // 내가 가진 offer을 전송\n      socket.emit(\"offer\", info.socketId, offer);\n      return;\n    });\n\n    // 기존 입장한 유저가 보낸 offer를 받고 답장을 보냄.\n    // 서버에서 전송된 데이터 ({ socketId: socket.id, name: socket.user.name }, offer)\n    socket.on(\"offer\", async (info, inOffer) => {\n      var peerConnection;\n      var obj = {\n        socketId: info.socketId,\n        name: info.name,\n        peerConnection: peerConnection,\n      };\n\n      await this.makeConnection(\n        obj,\n        (data) => {\n          console.log(\"offer/sent candidate \" + data.candidate);\n          socket.emit(\"ice\", info.socketId, data.candidate);\n        },\n        (data) => {\n          obj.stream = data.stream;\n          this.dummy[0]++;\n        }\n      );\n\n      await obj.peerConnection.setRemoteDescription(inOffer);\n      const answer = await obj.peerConnection.createAnswer();\n      await obj.peerConnection.setLocalDescription(answer);\n\n      this.peerConnections.push(obj);\n\n      console.log(\"sent the answer\");\n      socket.emit(\"answer\", info.socketId, answer);\n    });\n\n    // ({ socketId: socket.id, name: socket.user.name }, answer)\n    socket.on(\"answer\", async (info, answer) => {\n      var obj = this.peerConnections.find((item) => {\n        return item.socketId == info.socketId;\n      });\n      console.log(\"received the answer\");\n      // await obj.peerConnection.setRemoteDescription(answer);\n      if (obj.peerConnection.signalingState != \"stable\") {\n        await obj.peerConnection.setRemoteDescription(answer);\n      }\n    });\n\n    // ({ socketId: socket.id, name: socket.user.name }, ice)\n    socket.on(\"ice\", async (info, ice) => {\n      console.log(\"received candidate\");\n      var obj = this.peerConnections.find((item) => {\n        return item.socketId == info.socketId;\n      });\n\n      await obj.peerConnection.addIceCandidate(ice);\n    });\n\n    // { socketId: socket.id, name: socket.user.name }, translation\n    socket.on(\"trans_return\", (info, translation) => {\n      console.log(`${info.name}: ${translation}`);\n    });\n\n    socket.on(\"not_room_auth\", () => {\n      alert(\"방에 접속할 수 없습니다.\");\n      this.$router.push(\"/\");\n    });\n\n    socket.on(\"not_auth\", () => {\n      alert(\"로그인이 필요합니다.\");\n      this.$router.push(\"/\");\n    });\n\n    socket.on(\"disconnect\", () => {\n      // alert(\"서버와 연결이 끊켰습니다.\");\n      console.log(\"disconnect\");\n    });\n\n    socket.on(\"user_disconnect\", (info) => {\n      console.log(info.name + \"님이 방을 나가셨습니다.\");\n      this.peerConnections = this.peerConnections.filter((item) => {\n        return item.socketId != info.socketId;\n      });\n    });\n  },\n  methods: {\n    getRoomName() {\n      const urlParam = new URLSearchParams(window.location.search);\n      this.roomName = urlParam.get(\"room\");\n    },\n    connect() {\n      socket.connect();\n      /** 라우터 이동 시 데이터 새로고침을 중지 */\n    },\n    // 내가 나갈 때 실행\n    disconnect() {\n      this.peerConnections.forEach((item) => {\n        item.peerConnection.close();\n      });\n      this.peerConnections = [];\n\n      if (this.myStream) {\n        this.myStream.getAudioTracks().forEach((track) => track.stop());\n        this.myStream.getVideoTracks().forEach((track) => track.stop());\n      }\n      this.myStream = null;\n      socket.disconnect();\n      console.log(\"disconnect\");\n    },\n    async getCameras() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const cameras = devices.filter(\n          (device) => device.kind === \"videoinput\"\n        );\n        const currentCamera = this.myStream.getVideoTracks()[0];\n\n        cameras.forEach((camera) => {\n          this.camerasList.push({ name: camera.label, value: camera.deviceId });\n          if (currentCamera.label == camera.label) {\n            this.camerasSelect = camera.label;\n          }\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    async getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: { facingMode: \"user\" },\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: { deviceId: { exact: deviceId } },\n      };\n      try {\n        this.myStream = await navigator.mediaDevices\n          .getUserMedia(deviceId ? cameraConstraints : initialConstrains)\n          .catch((err) => {\n            console.log(err);\n          });\n        const myFace = document.querySelector(\"#myFace\");\n        myFace.srcObject = this.myStream;\n        if (!deviceId) {\n          // 카메라 목록이 계속 추가되지 않도록 최초만 작동하도록 수정\n          await this.getCameras();\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    handleMuteClick() {\n      this.myStream\n        .getAudioTracks()\n        .forEach((track) => (track.enabled = !track.enabled));\n      if (!this.muted) {\n        this.muted = true;\n        this.recognition.stop();\n      } else {\n        this.muted = false;\n        this.recognition.start();\n      }\n    },\n    handleCameraClick() {\n      this.myStream\n        .getVideoTracks()\n        .forEach((track) => (track.enabled = !track.enabled));\n      if (this.cameraOff) {\n        this.cameraOff = false;\n      } else {\n        this.cameraOff = true;\n      }\n    },\n    async handleCameraChange(event) {\n      await this.getMedia(event.target.value);\n\n      this.peerConnections.forEach((item) => {\n        const videoTrack = this.myStream.getVideoTracks()[0];\n        const videoSender = item.peerConnection\n          .getSenders()\n          .find((sender) => sender.track.kind === \"video\");\n        videoSender.replaceTrack(videoTrack);\n      });\n    },\n    // RTC Code\n    makeConnection(\n      obj,\n      handleIce,\n      handleAddStream,\n      handleConnectionStateChange\n    ) {\n      console.log(\"webRTC start\");\n      obj.peerConnection = new RTCPeerConnection({\n        iceServers: [\n          {\n            urls: [\n              \"stun:stun.l.google.com:19302\",\n              \"stun:stun1.l.google.com:19302\",\n              \"stun:stun2.l.google.com:19302\",\n              \"stun:stun3.l.google.com:19302\",\n              \"stun:stun4.l.google.com:19302\",\n            ],\n          },\n        ],\n      });\n      obj.peerConnection.addEventListener(\"icecandidate\", handleIce);\n      obj.peerConnection.addEventListener(\"addstream\", handleAddStream);\n      obj.peerConnection.addEventListener(\n        \"iceconnectionstatechange\",\n        handleConnectionStateChange\n      ); // Add event listener for ice connection state change\n\n      this.myStream.getTracks().forEach((track) => {\n        obj.peerConnection.addTrack(track, this.myStream);\n      });\n    },\n\n    /**\n     * 입장 가능한 유저의 정보를 서버에 전송한다.\n     */\n    sendAuthUser() {\n      socket.emit(\n        \"setAuthUser\",\n        this.authUserEmail,\n        this.roomName,\n        (result) => {\n          if (result === true) {\n            alert(\"등록되었습니다.\");\n          } else {\n            alert(\"등록에 실패하였습니다.\");\n          }\n        }\n      );\n    },\n\n    /**\n     * 음성 인식을 설정\n     */\n    setStt() {\n      // eslint-disable-next-line no-undef\n      this.recognition = new webkitSpeechRecognition();\n      var language = this.$store.state.language;\n      var country = this.$store.state.country;\n\n      console.log(`적용 언어: ${language}-${country}`);\n      this.recognition.lang = `${language}-${country}`;\n\n      this.recognition.onresult = (event) => {\n        const speechResult = event.results[0][0].transcript;\n        console.log(`인식 결과 ${speechResult}`);\n\n        // 음소거 중이면 전송하지 않도록\n        if (!this.muted) {\n          socket.emit(\"trans\", this.roomName, speechResult);\n        }\n      };\n\n      // this.recognition.onerror = (event) => {\n      //   console.log(event.error);\n      // };\n\n      this.recognition.onend = () => {\n        // console.log(\"다음 말을 인식합니다.\");\n        if (this.muted) {\n          this.recognition.stop();\n        } else {\n          this.recognition.start();\n        }\n      };\n\n      this.recognition.start();\n    },\n  },\n};\n</script>\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { reactive } from \"vue\";\nimport { io } from \"socket.io-client\";\n\nexport const state = reactive({\n  connected: false,\n  fooEvents: [],\n  barEvents: [],\n});\n\nconst URL =\n  process.env.NODE_ENV === \"production\"\n    ? undefined\n    : process.env.VUE_APP_SERVER_URL;\n\nexport const socket = io(URL);\n\n// socket.on(\"connect\", () => {\n//   console.log(URL);\n//   state.connected = true;\n//   console.log(\"ok\");\n// });\n\n// socket.on(\"disconnect\", () => {\n//   state.connected = false;\n//   console.log(\"disconnect\");\n// });\n\n// socket.on(\"foo\", (...args) => {\n//   state.fooEvents.push(args);\n// });\n\n// socket.on(\"bar\", (...args) => {\n//   state.barEvents.push(args);\n// });\n","<template>\n  <video\n    ref=\"videoTag\"\n    :id=\"id\"\n    autoplay\n    playsinline\n    width=\"400\"\n    height=\"400\"\n  ></video>\n</template>\n\n<script>\nexport default {\n  name: \"PeerVideo\",\n  props: [\"id\", \"stream\"],\n  watch: {\n    stream(newStream) {\n      if (newStream) {\n        this.$refs.videoTag.srcObject = newStream;\n      }\n    },\n  },\n  mounted() {\n    if (this.stream) {\n      this.$refs.videoTag.srcObject = this.stream;\n    }\n  },\n};\n</script>\n","import { render } from \"./PeerVideo.vue?vue&type=template&id=58163f14\"\nimport script from \"./PeerVideo.vue?vue&type=script&lang=js\"\nexport * from \"./PeerVideo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ChatView.vue?vue&type=template&id=67649d51\"\nimport script from \"./ChatView.vue?vue&type=script&lang=js\"\nexport * from \"./ChatView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <input type=\"text\" v-model=\"roomName\" /><button @click=\"enter\">입장</button>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"RoomView\",\n  data() {\n    return {\n      roomName: \"\",\n    };\n  },\n  methods: {\n    enter() {\n      this.$router.push(\"/chat?room=\" + this.roomName);\n    },\n  },\n};\n</script>\n","import { render } from \"./RoomView.vue?vue&type=template&id=ce1928f2\"\nimport script from \"./RoomView.vue?vue&type=script&lang=js\"\nexport * from \"./RoomView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","id","autoplay","playsinline","width","height","_hoisted_6","type","$data","authUserEmail","$event","onClick","_cache","args","$options","sendAuthUser","_hoisted_4","handleMuteClick","muted","handleCameraClick","cameraOff","camerasSelect","onChange","handleCameraChange","_Fragment","_renderList","camerasList","item","index","value","name","_hoisted_5","peerConnections","_createBlock","_component_peer_video","stream","dummy","_hoisted_7","disconnect","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","alphabet","map","prev","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","clearTimeout","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","reactive","fooEvents","barEvents","URL","ref","$props","props","watch","newStream","$refs","videoTag","srcObject","mounted","components","PeerVideo","roomName","myStream","peerStream","recognition","beforeUnmount","getRoomName","getMedia","$store","state","accessToken","setStt","peerConnection","console","log","info","socketId","makeConnection","candidate","target","iceConnectionState","filter","offer","createOffer","setLocalDescription","inOffer","setRemoteDescription","answer","createAnswer","find","signalingState","ice","addIceCandidate","translation","alert","$router","methods","urlParam","URLSearchParams","search","getAudioTracks","track","stop","getVideoTracks","devices","mediaDevices","enumerateDevices","cameras","device","kind","currentCamera","camera","label","deviceId","initialConstrains","audio","video","facingMode","cameraConstraints","exact","getUserMedia","catch","myFace","querySelector","getCameras","enabled","videoTrack","videoSender","getSenders","sender","replaceTrack","handleIce","handleAddStream","handleConnectionStateChange","RTCPeerConnection","iceServers","urls","getTracks","addTrack","webkitSpeechRecognition","language","country","lang","onresult","speechResult","results","transcript","onend","enter"],"sourceRoot":""}