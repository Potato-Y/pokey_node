{"version":3,"file":"js/about.ab018af7.js","mappings":"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","sources":["webpack://frontend/./node_modules/core-js/internals/regexp-flags.js","webpack://frontend/./node_modules/core-js/modules/es.regexp.flags.js","webpack://frontend/./src/views/AboutView.vue","webpack://frontend/./src/views/AboutView.vue?d56f","webpack://frontend/./src/views/ChatView.vue","webpack://frontend/./node_modules/engine.io-parser/build/esm/commons.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/index.js","webpack://frontend/./node_modules/@socket.io/component-emitter/index.mjs","webpack://frontend/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/util.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transport.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://frontend/./node_modules/engine.io-client/build/esm/socket.js","webpack://frontend/./node_modules/engine.io-client/build/esm/index.js","webpack://frontend/./node_modules/socket.io-client/build/esm/url.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/binary.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/index.js","webpack://frontend/./node_modules/socket.io-client/build/esm/on.js","webpack://frontend/./node_modules/socket.io-client/build/esm/socket.js","webpack://frontend/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://frontend/./node_modules/socket.io-client/build/esm/manager.js","webpack://frontend/./node_modules/socket.io-client/build/esm/index.js","webpack://frontend/./src/socket.js","webpack://frontend/./src/views/ChatView.vue?fcb5","webpack://frontend/./src/views/RoomView.vue","webpack://frontend/./src/views/RoomView.vue?c793"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n  </div>\n</template>\n","import { render } from \"./AboutView.vue?vue&type=template&id=48dedea6\"\nconst script = {}\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    허용할 유저 이메일 <br />\n    <input type=\"text\" />\n    <button>저장</button>\n    <div id=\"call\">\n      <div id=\"myStream\">\n        <video\n          id=\"myFace\"\n          autoplay\n          playsinline\n          width=\"400\"\n          height=\"400\"\n        ></video>\n        <button id=\"mute\">Mute</button>\n        <button id=\"camera\">Turn Camera Off</button>\n        <select id=\"cameras\"></select>\n      </div>\n      <video\n        id=\"peerFace\"\n        autoplay\n        playsinline\n        width=\"400\"\n        height=\"400\"\n      ></video>\n    </div>\n    <button @click=\"disconnect\">bus</button>\n  </div>\n</template>\n\n<script>\nimport { socket } from \"@/socket\";\n\nexport default {\n  name: \"ChatView\",\n  data() {\n    return {\n      roomName: \"\",\n      myStream: null,\n      muted: false,\n      cameraOff: false,\n      myPeerConnection: null,\n    };\n  },\n  beforeUnmount() {\n    this.disconnect();\n  },\n  async mounted() {\n    this.getRoomName();\n    await this.getMedia();\n    this.connect();\n    socket.emit(\n      \"join_room\",\n      this.roomName,\n      this.$store.state.accessToken,\n      () => {\n        this.makeConnection();\n      }\n    );\n\n    socket.on(\"welcome\", async () => {\n      const offer = await this.myPeerConnection.createOffer();\n      this.myPeerConnection.setLocalDescription(offer);\n      console.log(\"sent the offer\");\n      socket.emit(\"offer\", offer, this.roomName);\n    });\n\n    socket.on(\"offer\", async (offer) => {\n      console.log(\"received the offer\");\n      this.myPeerConnection.setRemoteDescription(offer);\n      const answer = await this.myPeerConnection.createAnswer();\n      this.myPeerConnection.setLocalDescription(answer);\n      socket.emit(\"answer\", answer, this.roomName);\n      console.log(\"sent the answer\");\n    });\n\n    socket.on(\"answer\", (answer) => {\n      console.log(\"received the answer\");\n      this.myPeerConnection.setRemoteDescription(answer);\n    });\n\n    socket.on(\"ice\", (ice) => {\n      console.log(\"received candidate\");\n      this.myPeerConnection.addIceCandidate(ice);\n    });\n\n    socket.on(\"auth_error\", () => {\n      alert(\"잘못된 접근입니다.\");\n      this.$router.push(\"/\");\n    });\n\n    socket.on(\"disconnect\", () => {\n      // alert(\"서버와 연결이 끊켰습니다.\");\n      console.log(\"disconnect\");\n    });\n  },\n  methods: {\n    getRoomName() {\n      const urlParam = new URLSearchParams(window.location.search);\n      this.roomName = urlParam.get(\"room\");\n    },\n    connect() {\n      socket.connect();\n      /** 라우터 이동 시 데이터 새로고침을 중지 */\n    },\n    disconnect() {\n      if (this.myPeerConnection !== null) {\n        this.myPeerConnection.close();\n      }\n      this.myPeerConnection = null;\n      if (this.myStream) {\n        this.myStream.getAudioTracks().forEach((track) => track.stop());\n        this.myStream.getVideoTracks().forEach((track) => track.stop());\n      }\n      this.myStream = null;\n      socket.disconnect();\n      console.log(\"disconnect\");\n    },\n    async getCameras() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const cameras = devices.filter(\n          (device) => device.kind === \"videoinput\"\n        );\n        const currentCamera = this.myStream.getVideoTracks()[0];\n\n        cameras.forEach((camera) => {\n          const option = document.createElement(\"option\");\n          option.value = camera.deviceId;\n          option.innerText = camera.label;\n          if (currentCamera.label === camera.label) {\n            option.selected = true;\n          }\n          this.camerasSelect.appendChild(option);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    async getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: { facingMode: \"user\" },\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: { deviceId: { exact: deviceId } },\n      };\n      try {\n        this.myStream = await navigator.mediaDevices.getUserMedia(\n          deviceId ? cameraConstraints : initialConstrains\n        );\n        const myFace = document.querySelector(\"#myFace\");\n        myFace.srcObject = this.myStream;\n        if (!deviceId) {\n          // 카메라 목록이 계속 추가되지 않도록 최초만 작동하도록 수정\n          await this.getCameras();\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    handleMuteClick() {\n      this.myStream\n        .getAudioTracks()\n        .forEach((track) => (track.enabled = !track.enabled));\n      if (!this.muted) {\n        this.muteBtn.innerText = \"Unmute\";\n        this.muted = true;\n      } else {\n        this.muteBtn.innerText = \"Mute\";\n        this.muted = false;\n      }\n    },\n    handleCameraClick() {\n      this.myStream\n        .getVideoTracks()\n        .forEach((track) => (track.enabled = !track.enabled));\n      if (this.cameraOff) {\n        this.cameraBtn.innerText = \"Turn Camera Off\";\n        this.cameraOff = false;\n      } else {\n        this.cameraBtn.innerText = \"Turn Camera On\";\n        this.cameraOff = true;\n      }\n    },\n    // async handleCameraChange() {\n    //   await this.getMedia(camerasSelect.value);\n    //   if (this.myPeerConnection) {\n    //     const videoTrack = myStream.getVideoTracks()[0];\n    //     const videoSender = myPeerConnection\n    //       .getSenders()\n    //       .find((sender) => sender.track.kind === \"video\");\n    //     videoSender.replaceTrack(videoTrack);\n    //   }\n    // },\n    // RTC Code\n    makeConnection() {\n      console.log(\"webRTC start\");\n      this.myPeerConnection = new RTCPeerConnection({\n        iceServers: [\n          {\n            urls: [\n              \"stun:stun.l.google.com:19302\",\n              \"stun:stun1.l.google.com:19302\",\n              \"stun:stun2.l.google.com:19302\",\n              \"stun:stun3.l.google.com:19302\",\n              \"stun:stun4.l.google.com:19302\",\n            ],\n          },\n        ],\n      });\n      this.myPeerConnection.addEventListener(\"icecandidate\", this.handleIce);\n      this.myPeerConnection.addEventListener(\"addstream\", this.handleAddStream);\n      this.myStream.getTracks().forEach((track) => {\n        this.myPeerConnection.addTrack(track, this.myStream);\n      });\n    },\n    handleIce(data) {\n      console.log(\"sent candidate\");\n      socket.emit(\"ice\", data.candidate, this.roomName);\n    },\n    handleAddStream(data) {\n      const peersStream = document.querySelector(\"#peerFace\");\n\n      peersStream.srcObject = data.stream;\n    },\n  },\n};\n</script>\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { reactive } from \"vue\";\nimport { io } from \"socket.io-client\";\n\nexport const state = reactive({\n  connected: false,\n  fooEvents: [],\n  barEvents: [],\n});\n\nconst URL =\n  process.env.NODE_ENV === \"production\"\n    ? undefined\n    : process.env.VUE_APP_SERVER_URL;\n\nexport const socket = io(URL);\n\n// socket.on(\"connect\", () => {\n//   console.log(URL);\n//   state.connected = true;\n//   console.log(\"ok\");\n// });\n\n// socket.on(\"disconnect\", () => {\n//   state.connected = false;\n//   console.log(\"disconnect\");\n// });\n\n// socket.on(\"foo\", (...args) => {\n//   state.fooEvents.push(args);\n// });\n\n// socket.on(\"bar\", (...args) => {\n//   state.barEvents.push(args);\n// });\n","import { render } from \"./ChatView.vue?vue&type=template&id=8c17cfba\"\nimport script from \"./ChatView.vue?vue&type=script&lang=js\"\nexport * from \"./ChatView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <input type=\"text\" v-model=\"roomName\" /><button @click=\"enter\">입장</button>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"RoomView\",\n  data() {\n    return {\n      roomName: \"\",\n    };\n  },\n  methods: {\n    enter() {\n      this.$router.push(\"/chat?room=\" + this.roomName);\n    },\n  },\n};\n</script>\n","import { render } from \"./RoomView.vue?vue&type=template&id=ce1928f2\"\nimport script from \"./RoomView.vue?vue&type=script&lang=js\"\nexport * from \"./RoomView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/yujonghwan/Documents/GitHub/pokey_node/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","type","id","autoplay","playsinline","width","height","_hoisted_4","onClick","_cache","args","$options","disconnect","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","alphabet","map","prev","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","name","poll","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","clearTimeout","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","reactive","fooEvents","barEvents","URL","roomName","myStream","muted","cameraOff","myPeerConnection","beforeUnmount","getRoomName","getMedia","$store","state","accessToken","makeConnection","offer","createOffer","setLocalDescription","console","log","setRemoteDescription","answer","createAnswer","ice","addIceCandidate","alert","$router","methods","urlParam","URLSearchParams","search","getAudioTracks","track","stop","getVideoTracks","devices","mediaDevices","enumerateDevices","cameras","filter","device","kind","currentCamera","camera","option","createElement","deviceId","innerText","label","selected","camerasSelect","appendChild","initialConstrains","audio","video","facingMode","cameraConstraints","exact","getUserMedia","myFace","querySelector","srcObject","getCameras","handleMuteClick","enabled","muteBtn","handleCameraClick","cameraBtn","RTCPeerConnection","iceServers","urls","handleIce","handleAddStream","getTracks","addTrack","candidate","peersStream","stream","$data","$event","enter"],"sourceRoot":""}